import org.beryx.jlink.JlinkTask
import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'application'
    id 'org.beryx.jlink' version '2.24.4'
}

setVersion '1.0-SNAPSHOT'

application {
    mainModule = 'io.xpipe.modulefs.tests'
    mainClass = 'io.xpipe.modulefs.tests.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':modulefs')
    testImplementation project(':modulefs')
    implementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        output.resourcesDir = "build/classes/java/main"
    }
    test {
        output.resourcesDir = "build/classes/java/test"
    }
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    modularity.inferModulePath = true
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked"
}

task copyModules(type: Copy) {
    into "${buildDir}/modules"
    from configurations.runtimeClasspath
}

task copyOutput(type: Copy) {
    into "${buildDir}/modules"
    from "${buildDir}/libs"
}

jlink {
    imageDir = file("$buildDir/image")
    options = [
            // '--strip-debug',
            '--compress', '2',
            '--no-header-files',
            '--no-man-pages']
    launcher {
        name = 'modulefs'
    }

    customImage {
        appModules = [
                'io.xpipe.modulefs.tests',
        ]
    }
}

task createImage(type: JlinkTask, dependsOn: [copyModules, copyOutput]) {
}
