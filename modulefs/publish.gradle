java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'ModuleFS'
                description = 'The ModuleFS library provides a simple file system implementation to access the contents of Java modules in a unified way.'
                url = 'https://github.com/xpipe-io/modulefs'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://github.com/xpipe-io/modulefs/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'crschnick'
                        name = 'Christopher Schnick'
                        email = 'crschnick@xpipe.io'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/xpipe-io/modulefs.git'
                    developerConnection = 'scm:git:ssh://github.com/xpipe-io/modulefs.git'
                    url = 'https://github.com/xpipe-io/modulefs'
                }
            }
        }
    }
}

def signingKeyId = project.hasProperty('signingKeyId') ? project.property("signingKeyId") : System.getenv('GPG_KEY_ID')
def signingKey = project.hasProperty('signingKeyFile') ? file(project.property("signingKeyFile")).text : System.getenv('GPG_KEY')
def signingPassword = project.hasProperty('signingKeyPassword') ? project.property("signingKeyPassword") : System.getenv('GPG_KEY_PASSWORD')

signing {
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword != null ? signingPassword : '')

    sign publishing.publications.mavenJava
}
